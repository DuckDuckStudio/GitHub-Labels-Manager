name: Build Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 版本号 (不带v)
        required: true

permissions:
  contents: write

jobs:
  build:
    name: 构建发行版
    runs-on: windows-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置 Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装依赖
        env:
          PYTHONIOENCODING: utf-8
        run: |
          python.exe -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          pip list
          echo ========================================
          $upx_url = (Invoke-WebRequest -Uri https://api.github.com/repos/upx/upx/releases/latest).Content | ConvertFrom-Json | Select-Object -ExpandProperty assets | Where-Object { $_.name -like "*win64.zip" } | Select-Object -ExpandProperty browser_download_url
          Write-Host "[INFO] Latest UPX download URL: $upx_url"
          Invoke-WebRequest -Uri $upx_url -OutFile "upx-latest.zip"
          7z x "upx-latest.zip" -o"."

      - name: 更新版本号
        env:
          PYTHONIOENCODING: utf-8
        # 前面已经配置过 Python 了，这个脚本只用 os 和 sys 这两个标准库，不用再装依赖
        run: |
          python "自动化脚本/修改版本号.py" "${{ github.event.inputs.version }}"

      - name: 整理文件
        run: |
          Copy-Item -Path ".\程序脚本" -Destination "version\Code\zh-CN" -Recurse -Verbose
          Copy-Item -Path ".\other-languages\en-US" -Destination "version\Code\en-US" -Recurse -Verbose
          Copy-Item -Path ".\LICENSE" -Destination "version\Code\zh-CN" -Verbose
          Copy-Item -Path ".\LICENSE" -Destination "version\Code\en-US" -Verbose

      # ============ Compile ============

      - name: 压缩发行版
        run: |
          7z a .\version\Release\zh-CN\GitHub-Labels-Manager-v${{ github.event.inputs.version }}.zip .\version\Code\zh-CN
          7z a .\version\Release\en-US\GitHub-Labels-Manager-v${{ github.event.inputs.version }}-EN.zip .\version\Code\en-US
          7z a .\version\Release\zh-CN\GitHub-Labels-Manager-v${{ github.event.inputs.version }}.7z .\version\Code\zh-CN
          7z a .\version\Release\en-US\GitHub-Labels-Manager-v${{ github.event.inputs.version }}-EN.7z .\version\Code\en-US

      - name: 打包发行版
        run: |
          pyinstaller --onefile -i ico.ico --distpath=.\version\Code\zh-CN --name=glm.exe .\version\Code\zh-CN\glm.py --hiddenimport win32timezone
          echo ======================================
          pyinstaller --onefile -i ico.ico --distpath=.\version\Code\en-US --name=glm.exe .\version\Code\en-US\glm.py --hiddenimport win32timezone
          echo ======================================
          del .\version\Code\zh-CN\glm.py
          del .\version\Code\en-US\glm.py

      - name: 配置 Inno 中文翻译
        run: |
          curl -o "C:\Program Files (x86)\Inno Setup 6\Languages\ChineseSimplified.isl" "https://raw.githubusercontent.com/jrsoftware/issrc/main/Files/Languages/Unofficial/ChineseSimplified.isl"

      - name: 验证文件
        run: |
          tree /f /a

      - name: 打包安装程序
        run: |
          iscc pack.iss
          echo =======================
          iscc packEN.iss

      # ============ Upload ============

      - name: 上传构建文件
        uses: actions/upload-artifact@v4
        with:
          name: GitHub-Labels-Manager-${{ github.event.inputs.version }}
          path: |
            .\version\Release\zh-CN\*
            .\version\Release\en-US\*
